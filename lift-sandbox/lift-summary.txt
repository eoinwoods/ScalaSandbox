LIFT (2.x) Summary

0. Erata
 - project started in 2009

1. Takes a view-first model:
 - traditional model uses the controllers to work out which view to allocate (see spring MVC)
 - Lift is opposite in that first selects the view and then resolves the content
 - comprises three key parts: view, snippet and model (VSM)
 - view executes a command on the <stateful> snippet; <statefukl> snippet applies/commits to the model
 - two types of view: template (static) and generated views (dynamic)
 - a view can call a number of snippets
 - Snippets act as go-betweens between the view and the model:
    - rendering xml into the model
    - observing model changes and mediating them back to the view
 - four key modules
    - Lift Core: common utils; actor model (why??); JSON support
    - Lift Web: AJAX; REST; HTTP abstraction; Comet support; security etc
    - Lift Persistence: Lift ORM (Mapper); JPA support (note mutable); Record (functional CRUD module)
    - Lift Modules: extensions such as queuing (AMQP); transations (JTA); Lift state machine; OAuth; Paypal/facebook; etc etc

2. Basic project construction ready for Lift
 - create an empty directory called the project you want
 - create a dir called project and in there create a file called build.properties
 - define the sbt version in there, note we are using version 0.11.3 as the lifty plugin version only works with this version
	==================
	sbt.version=0.11.3
	==================
 - create a file called plugins.sbt and in the add the following (empty line separated):
	==================
	resolvers += Resolver.url("sbt-plugin-releases", new URL("http://scalasbt.artifactoryonline.com/scalasbt/sbt-plugin-releases/"))(Resolver.ivyStylePatterns)
	addSbtPlugin("org.lifty" % "lifty" % "1.7.4")
	addSbtPlugin("com.github.mpeltonen" % "sbt-idea" % "1.3.0")
	==================
 - now in the root of the project create a file called build.sbt and in there put the following (empty line separated):
	==================
	name := "Static Data GUI"
	version := "1.0"
	scalaVersion := "2.10.0"
	==================
 - use Lifty to get you going (puts basic web app together)
 - 
